--Тестовое задание на позицию Специалист в направление по работе с внешними сервисами/аналитик SQL
--Исп.: Ю.В. Сулковская

--Задание 1
--1.	В компании есть несколько онлайн сервисов, но в каждом из них нужна отдельная регистрация (При регистрации в нескольких сервисах пользователь каждый раз заново заводит свои данные, при этом сохраняются они в одну базу данных, но с разными идентификаторами пользователя: зарегистрировался в 2-х сервисах – получил 2 разных user_id).
--Продуктовый менеджер одного из сервисов думает о разработке возможности единой регистрации во всех сервисах и хочет посмотреть, какое кол-во пользователей за последнюю неделю регистрировались в других сервисах (не в его сервисе), но при этом уже являлись пользователями его сервиса?
--*Регистрация - процесс, в котором пользователь указывает и подтверждает свои паспортные данные
--и другую персональную информацию.

--Таблицы:
--1. identification
--- user_id - строка, не null
--- product_id - целое, не null
--- identification_date - time, не null
--user_id - первичный ключ

--Сервис данного менеджера - это product_id = 1

--2. table_with_personal_data
--- user_id - строка, не null
--- pers_key_id - целое, не null
--- pers_value - строка, не null
--user_id, pers_key_id - составной первичный ключ

--pers_key_id равный 1, 2, 3, 4, 5 означают, соответственно, фамилию, имя, отчество, серию паспорта и номер паспорта. Список значений user_id насчитывает сотни наименований.
--Напишите SQL-запрос и опишите алгоритм решения.

--Решение:
--Учитывая, что в таблице identification за каждым user_id есть свой менеджер (product_id), присоединим к ней данные из таблицы table_with_personal_data через INNER JOIN. Сгруппируем данные по паспортным данным, потому что именно по точной информации при регистрации можно определить, что в нескольких сервисах есть один и тот же пользователь (исключая риск однофамильцев и т.д.). Выведем поле, в котором будет указана информация о том, что пользователь зарегистрирован в сервисе нашего менеджера (product_id = 1).
--Не могу гарантировать полную корректность запроса, так как нет подходящих данных для теста, но по логике, при запросе, мы должны получить количество пользователей по массиву, где:
--user_id                   |product_id	|pers_value	|manager_1
--[34314, 367567, 98284382]	|[1,3,4]	|66 66 6666	|True
--[73545, 8254474735]	    |[3,5]	    |77 77 7777	|False

--Мой запрос:
SELECT
    COUNT(user_id)
FROM identification
JOIN table_with_personal_data ON identification.user_id = table_with_personal_data.user_id
GROUP BY pers_value
   AND IF (product_id = 1, True, False) as manager_1
HAVING manager_1 = True 
    AND pers_key_id = 5

--Задание 2
--Есть три таблицы:
--В первой таблице содержится информация о производителях товаров:
--- Код производителя;
--- Наименование производителя;
--- Страна производителя;
--- Регион производителя.

--Во второй – информация о товаре:
--- Код товара;
--- Код производителя;
--- Вид товара;
--- Наименование товара;
--- Единица измерения;
--- Стоимость.

--В третьей -  информация о реализации товара:
--- Продавец;
--- Адрес продавца;
--- Дата реализации;
--- Код товара;
--- Кол-во реализованного товара;
---  Стоимость реализованного товара.

--1)	Определить производителя, товар которого, пользовался наибольшим спросом в заданном периоде времени: месяце/квартале:
SELECT
    a.Наименование_производителя,
    c.SUM(Кол-во_реализованного_товара) as total_sold
FROM a
JOIN b ON a.Код_производителя = b.Код_производителя
JOIN c ON a.Код_товара = c.Код_товара
WHERE (Дата_реализации >= '2021-12-01' AND Дата_реализации <= '2021-12-31')
GROUP BY Наименование_производителя
ORDER BY total_sold DESC
LIMIT 1

--2)	Определить для каждого региона вид наименее востребованного товара:
SELECT
    a.Регион_производителя,
    worst_product
FROM a
JOIN b ON a.Код_производителя = b.Код_производителя
JOIN c ON a.Код_товара = c.Код_товара
GROUP BY Регион_производителя
WINDOW worst_product AS (PARTITION BY Код_товара ORDER BY Кол-во_реализованного_товара ASC)